<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="566" onload="init(evt)" viewBox="0 0 1200 566" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="549"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="549"> </text>
<g id="frames">
<g>
<title>all (93,625 samples, 100.00%)</title><rect x="10.0" y="515.0" width="1180.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="13.0" y="526.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (92,057 samples, 98.33%)</title><rect x="10.0" y="499.0" width="1160.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="510.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (92,057 samples, 98.33%)</title><rect x="10.0" y="483.0" width="1160.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="494.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (92,057 samples, 98.33%)</title><rect x="10.0" y="467.0" width="1160.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="478.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (122 samples, 0.13%)</title><rect x="10.0" y="451.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (122 samples, 0.13%)</title><rect x="10.0" y="435.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (73 samples, 0.08%)</title><rect x="10.0" y="419.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (73 samples, 0.08%)</title><rect x="10.0" y="403.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (73 samples, 0.08%)</title><rect x="10.0" y="387.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (73 samples, 0.08%)</title><rect x="10.0" y="371.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (73 samples, 0.08%)</title><rect x="10.0" y="355.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (73 samples, 0.08%)</title><rect x="10.0" y="339.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="13.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (49 samples, 0.05%)</title><rect x="10.9" y="419.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (49 samples, 0.05%)</title><rect x="10.9" y="403.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (49 samples, 0.05%)</title><rect x="10.9" y="387.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (49 samples, 0.05%)</title><rect x="10.9" y="371.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (49 samples, 0.05%)</title><rect x="10.9" y="355.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (49 samples, 0.05%)</title><rect x="10.9" y="339.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.9" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (49 samples, 0.05%)</title><rect x="10.9" y="323.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="13.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kuzoliza/MyService$$Lambda$72/42049160.run (91,935 samples, 98.19%)</title><rect x="11.5" y="451.0" width="1158.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="14.5" y="462.0">ru/mail/polis/service/kuzoliza/MyService$$Lambda$72/42049160.run</text>
</g>
<g>
<title>ru/mail/polis/service/kuzoliza/MyService.lambda$entity$1 (91,935 samples, 98.19%)</title><rect x="11.5" y="435.0" width="1158.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="14.5" y="446.0">ru/mail/polis/service/kuzoliza/MyService.lambda$entity$1</text>
</g>
<g>
<title>ru/mail/polis/service/kuzoliza/MyService.response (91,935 samples, 98.19%)</title><rect x="11.5" y="419.0" width="1158.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="14.5" y="430.0">ru/mail/polis/service/kuzoliza/MyService.response</text>
</g>
<g>
<title>ru/mail/polis/service/kuzoliza/MyService.getResponse (91,935 samples, 98.19%)</title><rect x="11.5" y="403.0" width="1158.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="14.5" y="414.0">ru/mail/polis/service/kuzoliza/MyService.getResponse</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (91,935 samples, 98.19%)</title><rect x="11.5" y="387.0" width="1158.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="14.5" y="398.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (3,142 samples, 3.36%)</title><rect x="11.5" y="371.0" width="39.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="14.5" y="382.0">com..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (3,142 samples, 3.36%)</title><rect x="11.5" y="355.0" width="39.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="14.5" y="366.0">com..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (3,142 samples, 3.36%)</title><rect x="11.5" y="339.0" width="39.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="14.5" y="350.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (3,142 samples, 3.36%)</title><rect x="11.5" y="323.0" width="39.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="14.5" y="334.0">com..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3,142 samples, 3.36%)</title><rect x="11.5" y="307.0" width="39.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="14.5" y="318.0">ru/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3,142 samples, 3.36%)</title><rect x="11.5" y="291.0" width="39.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="14.5" y="302.0">com..</text>
</g>
<g>
<title>java/util/PriorityQueue.add (3,142 samples, 3.36%)</title><rect x="11.5" y="275.0" width="39.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="14.5" y="286.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (3,142 samples, 3.36%)</title><rect x="11.5" y="259.0" width="39.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="14.5" y="270.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (3,142 samples, 3.36%)</title><rect x="11.5" y="243.0" width="39.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="14.5" y="254.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (3,142 samples, 3.36%)</title><rect x="11.5" y="227.0" width="39.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="14.5" y="238.0">jav..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3,142 samples, 3.36%)</title><rect x="11.5" y="211.0" width="39.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="14.5" y="222.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3,142 samples, 3.36%)</title><rect x="11.5" y="195.0" width="39.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="14.5" y="206.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (3,142 samples, 3.36%)</title><rect x="11.5" y="179.0" width="39.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="14.5" y="190.0">com..</text>
</g>
<g>
<title>ru/mail/polis/dao/kuzoliza/SStable$1.next (3,142 samples, 3.36%)</title><rect x="11.5" y="163.0" width="39.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="14.5" y="174.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/kuzoliza/SStable$1.next (3,142 samples, 3.36%)</title><rect x="11.5" y="147.0" width="39.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="14.5" y="158.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/kuzoliza/SStable.getCell (3,142 samples, 3.36%)</title><rect x="11.5" y="131.0" width="39.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="14.5" y="142.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/kuzoliza/SStable.getKey (1,330 samples, 1.42%)</title><rect x="11.5" y="115.0" width="16.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="14.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kuzoliza/SStable.getOffset (497 samples, 0.53%)</title><rect x="11.5" y="99.0" width="6.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="14.5" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (497 samples, 0.53%)</title><rect x="11.5" y="83.0" width="6.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="14.5" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (497 samples, 0.53%)</title><rect x="11.5" y="67.0" width="6.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="14.5" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (54 samples, 0.06%)</title><rect x="11.5" y="51.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="14.5" y="62.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (54 samples, 0.06%)</title><rect x="11.5" y="35.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="14.5" y="46.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (443 samples, 0.47%)</title><rect x="12.2" y="51.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="15.2" y="62.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (443 samples, 0.47%)</title><rect x="12.2" y="35.0" width="5.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="15.2" y="46.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (833 samples, 0.89%)</title><rect x="17.8" y="99.0" width="10.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="20.8" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (833 samples, 0.89%)</title><rect x="17.8" y="83.0" width="10.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="20.8" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (84 samples, 0.09%)</title><rect x="17.8" y="67.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="20.8" y="78.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (84 samples, 0.09%)</title><rect x="17.8" y="51.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="20.8" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (749 samples, 0.80%)</title><rect x="18.9" y="67.0" width="9.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="21.9" y="78.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (749 samples, 0.80%)</title><rect x="18.9" y="51.0" width="9.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="21.9" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kuzoliza/SStable.getOffset (763 samples, 0.81%)</title><rect x="28.3" y="115.0" width="9.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="31.3" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (763 samples, 0.81%)</title><rect x="28.3" y="99.0" width="9.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="31.3" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (763 samples, 0.81%)</title><rect x="28.3" y="83.0" width="9.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="31.3" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (258 samples, 0.28%)</title><rect x="28.3" y="67.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="31.3" y="78.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (258 samples, 0.28%)</title><rect x="28.3" y="51.0" width="3.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="31.3" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (505 samples, 0.54%)</title><rect x="31.6" y="67.0" width="6.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="34.6" y="78.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (505 samples, 0.54%)</title><rect x="31.6" y="51.0" width="6.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="34.6" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1,049 samples, 1.12%)</title><rect x="37.9" y="115.0" width="13.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="40.9" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1,049 samples, 1.12%)</title><rect x="37.9" y="99.0" width="13.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="40.9" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (150 samples, 0.16%)</title><rect x="37.9" y="83.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="40.9" y="94.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (150 samples, 0.16%)</title><rect x="37.9" y="67.0" width="1.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="40.9" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (899 samples, 0.96%)</title><rect x="39.8" y="83.0" width="11.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="42.8" y="94.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (899 samples, 0.96%)</title><rect x="39.8" y="67.0" width="11.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="42.8" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kuzoliza/LSM.iterator (88,793 samples, 94.84%)</title><rect x="51.1" y="371.0" width="1119.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="54.1" y="382.0">ru/mail/polis/dao/kuzoliza/LSM.iterator</text>
</g>
<g>
<title>ru/mail/polis/dao/kuzoliza/LSM.noTombstones (88,793 samples, 94.84%)</title><rect x="51.1" y="355.0" width="1119.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="54.1" y="366.0">ru/mail/polis/dao/kuzoliza/LSM.noTombstones</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (16,174 samples, 17.28%)</title><rect x="51.1" y="339.0" width="203.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="54.1" y="350.0">com/google/common/collect/I..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (16,174 samples, 17.28%)</title><rect x="51.1" y="323.0" width="203.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="54.1" y="334.0">com/google/common/collect/I..</text>
</g>
<g>
<title>java/util/PriorityQueue.add (16,174 samples, 17.28%)</title><rect x="51.1" y="307.0" width="203.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="54.1" y="318.0">java/util/PriorityQueue.add</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (16,174 samples, 17.28%)</title><rect x="51.1" y="291.0" width="203.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="54.1" y="302.0">java/util/PriorityQueue.offer</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (16,174 samples, 17.28%)</title><rect x="51.1" y="275.0" width="203.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="54.1" y="286.0">java/util/PriorityQueue.sif..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (16,174 samples, 17.28%)</title><rect x="51.1" y="259.0" width="203.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="54.1" y="270.0">java/util/PriorityQueue.sif..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (16,174 samples, 17.28%)</title><rect x="51.1" y="243.0" width="203.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="54.1" y="254.0">com/google/common/collect/I..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (16,174 samples, 17.28%)</title><rect x="51.1" y="227.0" width="203.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="54.1" y="238.0">com/google/common/collect/I..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (16,174 samples, 17.28%)</title><rect x="51.1" y="211.0" width="203.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="54.1" y="222.0">com/google/common/collect/I..</text>
</g>
<g>
<title>ru/mail/polis/dao/kuzoliza/SStable$1.next (16,174 samples, 17.28%)</title><rect x="51.1" y="195.0" width="203.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="54.1" y="206.0">ru/mail/polis/dao/kuzoliza/..</text>
</g>
<g>
<title>ru/mail/polis/dao/kuzoliza/SStable$1.next (16,174 samples, 17.28%)</title><rect x="51.1" y="179.0" width="203.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="54.1" y="190.0">ru/mail/polis/dao/kuzoliza/..</text>
</g>
<g>
<title>ru/mail/polis/dao/kuzoliza/SStable.getCell (16,174 samples, 17.28%)</title><rect x="51.1" y="163.0" width="203.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="54.1" y="174.0">ru/mail/polis/dao/kuzoliza/..</text>
</g>
<g>
<title>ru/mail/polis/dao/kuzoliza/SStable.getKey (6,251 samples, 6.68%)</title><rect x="51.1" y="147.0" width="78.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="54.1" y="158.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/dao/kuzoliza/SStable.getOffset (2,312 samples, 2.47%)</title><rect x="51.1" y="131.0" width="29.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="54.1" y="142.0">ru..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2,312 samples, 2.47%)</title><rect x="51.1" y="115.0" width="29.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="54.1" y="126.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (2,312 samples, 2.47%)</title><rect x="51.1" y="99.0" width="29.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="54.1" y="110.0">su..</text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (397 samples, 0.42%)</title><rect x="51.1" y="83.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="54.1" y="94.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (397 samples, 0.42%)</title><rect x="51.1" y="67.0" width="5.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="54.1" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1,915 samples, 2.05%)</title><rect x="56.1" y="83.0" width="24.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="59.1" y="94.0">s..</text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (1,915 samples, 2.05%)</title><rect x="56.1" y="67.0" width="24.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="59.1" y="78.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3,939 samples, 4.21%)</title><rect x="80.3" y="131.0" width="49.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="83.3" y="142.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (3,939 samples, 4.21%)</title><rect x="80.3" y="115.0" width="49.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="83.3" y="126.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (379 samples, 0.40%)</title><rect x="80.3" y="99.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="83.3" y="110.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (379 samples, 0.40%)</title><rect x="80.3" y="83.0" width="4.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="83.3" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (3,560 samples, 3.80%)</title><rect x="85.1" y="99.0" width="44.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="88.1" y="110.0">sun/..</text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (3,560 samples, 3.80%)</title><rect x="85.1" y="83.0" width="44.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="88.1" y="94.0">sun...</text>
</g>
<g>
<title>ru/mail/polis/dao/kuzoliza/SStable.getOffset (4,792 samples, 5.12%)</title><rect x="129.9" y="147.0" width="60.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="132.9" y="158.0">ru/mai..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (4,792 samples, 5.12%)</title><rect x="129.9" y="131.0" width="60.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="132.9" y="142.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (4,792 samples, 5.12%)</title><rect x="129.9" y="115.0" width="60.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="132.9" y="126.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (3,380 samples, 3.61%)</title><rect x="129.9" y="99.0" width="42.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="132.9" y="110.0">sun/..</text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (3,380 samples, 3.61%)</title><rect x="129.9" y="83.0" width="42.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="132.9" y="94.0">sun...</text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1,412 samples, 1.51%)</title><rect x="172.5" y="99.0" width="17.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="175.5" y="110.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (1,412 samples, 1.51%)</title><rect x="172.5" y="83.0" width="17.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="175.5" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (5,131 samples, 5.48%)</title><rect x="190.3" y="147.0" width="64.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="193.3" y="158.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (5,131 samples, 5.48%)</title><rect x="190.3" y="131.0" width="64.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="193.3" y="142.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (673 samples, 0.72%)</title><rect x="190.3" y="115.0" width="8.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="193.3" y="126.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (673 samples, 0.72%)</title><rect x="190.3" y="99.0" width="8.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="193.3" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (4,458 samples, 4.76%)</title><rect x="198.8" y="115.0" width="56.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="201.8" y="126.0">sun/ni..</text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (4,458 samples, 4.76%)</title><rect x="198.8" y="99.0" width="56.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="201.8" y="110.0">sun.ni..</text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.forEach (66,197 samples, 70.70%)</title><rect x="255.0" y="339.0" width="834.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="258.0" y="350.0">java/util/Collections$UnmodifiableCollection.forEach</text>
</g>
<g>
<title>java/lang/Iterable.forEach (66,197 samples, 70.70%)</title><rect x="255.0" y="323.0" width="834.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="258.0" y="334.0">java/lang/Iterable.forEach</text>
</g>
<g>
<title>ru/mail/polis/dao/kuzoliza/LSM$$Lambda$84/82316169.accept (66,197 samples, 70.70%)</title><rect x="255.0" y="307.0" width="834.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="258.0" y="318.0">ru/mail/polis/dao/kuzoliza/LSM$$Lambda$84/82316169.accept</text>
</g>
<g>
<title>ru/mail/polis/dao/kuzoliza/LSM.lambda$noTombstones$3 (66,197 samples, 70.70%)</title><rect x="255.0" y="291.0" width="834.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="258.0" y="302.0">ru/mail/polis/dao/kuzoliza/LSM.lambda$noTombstones$3</text>
</g>
<g>
<title>ru/mail/polis/dao/kuzoliza/SStable.iterator (66,197 samples, 70.70%)</title><rect x="255.0" y="275.0" width="834.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="258.0" y="286.0">ru/mail/polis/dao/kuzoliza/SStable.iterator</text>
</g>
<g>
<title>ru/mail/polis/dao/kuzoliza/SStable$1.&lt;init&gt; (66,197 samples, 70.70%)</title><rect x="255.0" y="259.0" width="834.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="258.0" y="270.0">ru/mail/polis/dao/kuzoliza/SStable$1.&lt;init&gt;</text>
</g>
<g>
<title>ru/mail/polis/dao/kuzoliza/SStable.binarySearch (66,197 samples, 70.70%)</title><rect x="255.0" y="243.0" width="834.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="258.0" y="254.0">ru/mail/polis/dao/kuzoliza/SStable.binarySearch</text>
</g>
<g>
<title>ru/mail/polis/dao/kuzoliza/SStable.getKey (66,197 samples, 70.70%)</title><rect x="255.0" y="227.0" width="834.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="258.0" y="238.0">ru/mail/polis/dao/kuzoliza/SStable.getKey</text>
</g>
<g>
<title>ru/mail/polis/dao/kuzoliza/SStable.getOffset (25,671 samples, 27.42%)</title><rect x="255.0" y="211.0" width="323.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="258.0" y="222.0">ru/mail/polis/dao/kuzoliza/SStable.getOffset</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (25,671 samples, 27.42%)</title><rect x="255.0" y="195.0" width="323.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="258.0" y="206.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (25,671 samples, 27.42%)</title><rect x="255.0" y="179.0" width="323.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="258.0" y="190.0">sun/nio/ch/FileChannelImpl.readInternal</text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (7,070 samples, 7.55%)</title><rect x="255.0" y="163.0" width="89.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="258.0" y="174.0">sun/nio/ch..</text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (7,070 samples, 7.55%)</title><rect x="255.0" y="147.0" width="89.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="258.0" y="158.0">sun.nio.ch..</text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (18,601 samples, 19.87%)</title><rect x="344.1" y="163.0" width="234.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="347.1" y="174.0">sun/nio/ch/NativeThreadSet.remove</text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (18,601 samples, 19.87%)</title><rect x="344.1" y="147.0" width="234.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="347.1" y="158.0">sun.nio.ch.NativeThreadSet</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (40,526 samples, 43.29%)</title><rect x="578.5" y="211.0" width="510.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="581.5" y="222.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (40,526 samples, 43.29%)</title><rect x="578.5" y="195.0" width="510.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="581.5" y="206.0">sun/nio/ch/FileChannelImpl.readInternal</text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (4,358 samples, 4.65%)</title><rect x="578.5" y="179.0" width="55.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="581.5" y="190.0">sun/n..</text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (4,358 samples, 4.65%)</title><rect x="578.5" y="163.0" width="55.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="581.5" y="174.0">sun.n..</text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (36,168 samples, 38.63%)</title><rect x="633.5" y="179.0" width="455.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="636.5" y="190.0">sun/nio/ch/NativeThreadSet.remove</text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (36,168 samples, 38.63%)</title><rect x="633.5" y="163.0" width="455.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="636.5" y="174.0">sun.nio.ch.NativeThreadSet</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (6,422 samples, 6.86%)</title><rect x="1089.3" y="339.0" width="80.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1092.3" y="350.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (6,422 samples, 6.86%)</title><rect x="1089.3" y="323.0" width="80.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1092.3" y="334.0">ru/mail/p..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (6,422 samples, 6.86%)</title><rect x="1089.3" y="307.0" width="80.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1092.3" y="318.0">com/googl..</text>
</g>
<g>
<title>java/util/PriorityQueue.add (6,422 samples, 6.86%)</title><rect x="1089.3" y="291.0" width="80.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1092.3" y="302.0">java/util..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (6,422 samples, 6.86%)</title><rect x="1089.3" y="275.0" width="80.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1092.3" y="286.0">java/util..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (6,422 samples, 6.86%)</title><rect x="1089.3" y="259.0" width="80.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1092.3" y="270.0">java/util..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (6,422 samples, 6.86%)</title><rect x="1089.3" y="243.0" width="80.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1092.3" y="254.0">java/util..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6,422 samples, 6.86%)</title><rect x="1089.3" y="227.0" width="80.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1092.3" y="238.0">com/googl..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6,422 samples, 6.86%)</title><rect x="1089.3" y="211.0" width="80.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1092.3" y="222.0">com/googl..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (6,422 samples, 6.86%)</title><rect x="1089.3" y="195.0" width="80.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1092.3" y="206.0">com/googl..</text>
</g>
<g>
<title>ru/mail/polis/dao/kuzoliza/SStable$1.next (6,422 samples, 6.86%)</title><rect x="1089.3" y="179.0" width="80.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1092.3" y="190.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/dao/kuzoliza/SStable$1.next (6,422 samples, 6.86%)</title><rect x="1089.3" y="163.0" width="80.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1092.3" y="174.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/dao/kuzoliza/SStable.getCell (6,422 samples, 6.86%)</title><rect x="1089.3" y="147.0" width="80.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1092.3" y="158.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/dao/kuzoliza/SStable.getKey (2,744 samples, 2.93%)</title><rect x="1089.3" y="131.0" width="34.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1092.3" y="142.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/kuzoliza/SStable.getOffset (1,041 samples, 1.11%)</title><rect x="1089.3" y="115.0" width="13.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1092.3" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1,041 samples, 1.11%)</title><rect x="1089.3" y="99.0" width="13.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1092.3" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1,041 samples, 1.11%)</title><rect x="1089.3" y="83.0" width="13.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1092.3" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (124 samples, 0.13%)</title><rect x="1089.3" y="67.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1092.3" y="78.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (124 samples, 0.13%)</title><rect x="1089.3" y="51.0" width="1.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1092.3" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (917 samples, 0.98%)</title><rect x="1090.9" y="67.0" width="11.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1093.9" y="78.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (917 samples, 0.98%)</title><rect x="1090.9" y="51.0" width="11.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1093.9" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1,703 samples, 1.82%)</title><rect x="1102.4" y="115.0" width="21.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1105.4" y="126.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1,703 samples, 1.82%)</title><rect x="1102.4" y="99.0" width="21.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1105.4" y="110.0">s..</text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (204 samples, 0.22%)</title><rect x="1102.4" y="83.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1105.4" y="94.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (204 samples, 0.22%)</title><rect x="1102.4" y="67.0" width="2.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1105.4" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1,499 samples, 1.60%)</title><rect x="1105.0" y="83.0" width="18.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1108.0" y="94.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (1,499 samples, 1.60%)</title><rect x="1105.0" y="67.0" width="18.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1108.0" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kuzoliza/SStable.getOffset (1,643 samples, 1.75%)</title><rect x="1123.9" y="131.0" width="20.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1126.9" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1,643 samples, 1.75%)</title><rect x="1123.9" y="115.0" width="20.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1126.9" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1,643 samples, 1.75%)</title><rect x="1123.9" y="99.0" width="20.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1126.9" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (510 samples, 0.54%)</title><rect x="1123.9" y="83.0" width="6.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1126.9" y="94.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (510 samples, 0.54%)</title><rect x="1123.9" y="67.0" width="6.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1126.9" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1,133 samples, 1.21%)</title><rect x="1130.3" y="83.0" width="14.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1133.3" y="94.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (1,133 samples, 1.21%)</title><rect x="1130.3" y="67.0" width="14.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1133.3" y="78.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2,035 samples, 2.17%)</title><rect x="1144.6" y="131.0" width="25.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1147.6" y="142.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (2,035 samples, 2.17%)</title><rect x="1144.6" y="115.0" width="25.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1147.6" y="126.0">s..</text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (295 samples, 0.32%)</title><rect x="1144.6" y="99.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1147.6" y="110.0"></text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (295 samples, 0.32%)</title><rect x="1144.6" y="83.0" width="3.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1147.6" y="94.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1,740 samples, 1.86%)</title><rect x="1148.3" y="99.0" width="21.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1151.3" y="110.0">s..</text>
</g>
<g>
<title>sun.nio.ch.NativeThreadSet (1,740 samples, 1.86%)</title><rect x="1148.3" y="83.0" width="21.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1151.3" y="94.0">s..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,568 samples, 1.67%)</title><rect x="1170.2" y="499.0" width="19.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1173.2" y="510.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,568 samples, 1.67%)</title><rect x="1170.2" y="483.0" width="19.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1173.2" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,568 samples, 1.67%)</title><rect x="1170.2" y="467.0" width="19.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1173.2" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,568 samples, 1.67%)</title><rect x="1170.2" y="451.0" width="19.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1173.2" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,568 samples, 1.67%)</title><rect x="1170.2" y="435.0" width="19.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1173.2" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,568 samples, 1.67%)</title><rect x="1170.2" y="419.0" width="19.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1173.2" y="430.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (1,568 samples, 1.67%)</title><rect x="1170.2" y="403.0" width="19.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1173.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kuzoliza/MyService.entity (1,568 samples, 1.67%)</title><rect x="1170.2" y="387.0" width="19.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1173.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,568 samples, 1.67%)</title><rect x="1170.2" y="371.0" width="19.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1173.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1,568 samples, 1.67%)</title><rect x="1170.2" y="355.0" width="19.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1173.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1,568 samples, 1.67%)</title><rect x="1170.2" y="339.0" width="19.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1173.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1,568 samples, 1.67%)</title><rect x="1170.2" y="323.0" width="19.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1173.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1,568 samples, 1.67%)</title><rect x="1170.2" y="307.0" width="19.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1173.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,568 samples, 1.67%)</title><rect x="1170.2" y="291.0" width="19.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1173.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,568 samples, 1.67%)</title><rect x="1170.2" y="275.0" width="19.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1173.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,568 samples, 1.67%)</title><rect x="1170.2" y="259.0" width="19.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1173.2" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,568 samples, 1.67%)</title><rect x="1170.2" y="243.0" width="19.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1173.2" y="254.0"></text>
</g>
</g>
</svg>
