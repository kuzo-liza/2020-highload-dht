<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="582" onload="init(evt)" viewBox="0 0 1200 582" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="565"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="565"> </text>
<g id="frames">
<g>
<title>all (467 samples, 100.00%)</title><rect x="10.0" y="531.0" width="1180.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="13.0" y="542.0">all</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (461 samples, 98.72%)</title><rect x="10.0" y="515.0" width="1164.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="526.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/JavaSelector.select (245 samples, 52.46%)</title><rect x="15.1" y="499.0" width="619.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="18.1" y="510.0">one/nio/net/JavaSelector.select</text>
</g>
<g>
<title>one/nio/net/JavaSelector.iteratorFor (7 samples, 1.50%)</title><rect x="15.1" y="483.0" width="17.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="18.1" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (1 samples, 0.21%)</title><rect x="30.2" y="467.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="33.2" y="478.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.21%)</title><rect x="30.2" y="451.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="33.2" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.21%)</title><rect x="30.2" y="435.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="33.2" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (1 samples, 0.21%)</title><rect x="30.2" y="419.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="33.2" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.21%)</title><rect x="30.2" y="403.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="33.2" y="414.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (3 samples, 0.64%)</title><rect x="32.7" y="483.0" width="7.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="35.7" y="494.0"></text>
</g>
<g>
<title>_res (1 samples, 0.21%)</title><rect x="37.8" y="467.0" width="2.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="40.8" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (234 samples, 50.11%)</title><rect x="40.3" y="483.0" width="591.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="43.3" y="494.0">sun/nio/ch/SelectorImpl.select</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (234 samples, 50.11%)</title><rect x="40.3" y="467.0" width="591.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="43.3" y="478.0">sun/nio/ch/SelectorImpl.lockAndDoSelect</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.doSelect (233 samples, 49.89%)</title><rect x="42.8" y="451.0" width="588.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="45.8" y="462.0">sun/nio/ch/KQueueSelectorImpl.doSelect</text>
</g>
<g>
<title>sun/nio/ch/KQueue.poll (220 samples, 47.11%)</title><rect x="42.8" y="435.0" width="555.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="45.8" y="446.0">sun/nio/ch/KQueue.poll</text>
</g>
<g>
<title>JNI_OnLoad (1 samples, 0.21%)</title><rect x="63.1" y="419.0" width="2.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="66.1" y="430.0"></text>
</g>
<g>
<title>kevent (211 samples, 45.18%)</title><rect x="65.6" y="419.0" width="533.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="68.6" y="430.0">kevent</text>
</g>
<g>
<title>sun/nio/ch/KQueueSelectorImpl.processEvents (10 samples, 2.14%)</title><rect x="598.7" y="435.0" width="25.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="601.7" y="446.0">s..</text>
</g>
<g>
<title>java/util/HashMap.get (5 samples, 1.07%)</title><rect x="598.7" y="419.0" width="12.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="601.7" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.86%)</title><rect x="601.3" y="403.0" width="10.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="604.3" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.21%)</title><rect x="611.4" y="419.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="614.4" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/KQueue.getFilter (1 samples, 0.21%)</title><rect x="613.9" y="419.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="616.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getShort (1 samples, 0.21%)</title><rect x="613.9" y="403.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="616.9" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (3 samples, 0.64%)</title><rect x="616.4" y="419.0" width="7.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="619.4" y="430.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.21%)</title><rect x="616.4" y="403.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="619.4" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.21%)</title><rect x="616.4" y="387.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="619.4" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.21%)</title><rect x="616.4" y="371.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="619.4" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1 samples, 0.21%)</title><rect x="616.4" y="355.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="619.4" y="366.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (2 samples, 0.43%)</title><rect x="619.0" y="403.0" width="5.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="622.0" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (2 samples, 0.43%)</title><rect x="619.0" y="387.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="622.0" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.43%)</title><rect x="619.0" y="371.0" width="5.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="622.0" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (2 samples, 0.43%)</title><rect x="624.0" y="435.0" width="5.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="627.0" y="446.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (2 samples, 0.43%)</title><rect x="624.0" y="419.0" width="5.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="627.0" y="430.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.43%)</title><rect x="624.0" y="403.0" width="5.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="627.0" y="414.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.43%)</title><rect x="624.0" y="387.0" width="5.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="627.0" y="398.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.43%)</title><rect x="624.0" y="371.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="627.0" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (1 samples, 0.21%)</title><rect x="629.1" y="435.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="632.1" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (1 samples, 0.21%)</title><rect x="631.6" y="483.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="634.6" y="494.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (1 samples, 0.21%)</title><rect x="631.6" y="467.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="634.6" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (1 samples, 0.21%)</title><rect x="631.6" y="451.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="634.6" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (214 samples, 45.82%)</title><rect x="634.1" y="499.0" width="540.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="637.1" y="510.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (214 samples, 45.82%)</title><rect x="634.1" y="483.0" width="540.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="637.1" y="494.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (183 samples, 39.19%)</title><rect x="634.1" y="467.0" width="462.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="637.1" y="478.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (162 samples, 34.69%)</title><rect x="639.2" y="451.0" width="409.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="642.2" y="462.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.&lt;init&gt; (1 samples, 0.21%)</title><rect x="646.7" y="435.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="649.7" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (157 samples, 33.62%)</title><rect x="649.3" y="435.0" width="396.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="652.3" y="446.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler0_status.handleRequest (6 samples, 1.28%)</title><rect x="649.3" y="419.0" width="15.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="652.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kuzoliza/MyService.status (6 samples, 1.28%)</title><rect x="649.3" y="403.0" width="15.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="652.3" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (6 samples, 1.28%)</title><rect x="649.3" y="387.0" width="15.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="652.3" y="398.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (5 samples, 1.07%)</title><rect x="649.3" y="371.0" width="12.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="652.3" y="382.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (5 samples, 1.07%)</title><rect x="649.3" y="355.0" width="12.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="652.3" y="366.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (5 samples, 1.07%)</title><rect x="649.3" y="339.0" width="12.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="652.3" y="350.0"></text>
</g>
<g>
<title>ThreadSafepointState::handle_polling_page_exception() (1 samples, 0.21%)</title><rect x="659.4" y="323.0" width="2.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="662.4" y="334.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.21%)</title><rect x="659.4" y="307.0" width="2.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="662.4" y="318.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.21%)</title><rect x="659.4" y="291.0" width="2.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="662.4" y="302.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (1 samples, 0.21%)</title><rect x="659.4" y="275.0" width="2.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="662.4" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.21%)</title><rect x="661.9" y="371.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="664.9" y="382.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (146 samples, 31.26%)</title><rect x="664.4" y="419.0" width="368.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="667.4" y="430.0">RequestHandler1_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (63 samples, 13.49%)</title><rect x="664.4" y="403.0" width="159.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="667.4" y="414.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.21%)</title><rect x="664.4" y="387.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="667.4" y="398.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.21%)</title><rect x="664.4" y="371.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="667.4" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.21%)</title><rect x="664.4" y="355.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="667.4" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.21%)</title><rect x="664.4" y="339.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="667.4" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (62 samples, 13.28%)</title><rect x="667.0" y="387.0" width="156.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="670.0" y="398.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.64%)</title><rect x="667.0" y="371.0" width="7.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="670.0" y="382.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.43%)</title><rect x="669.5" y="355.0" width="5.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="672.5" y="366.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.43%)</title><rect x="669.5" y="339.0" width="5.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="672.5" y="350.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.43%)</title><rect x="669.5" y="323.0" width="5.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="672.5" y="334.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.21%)</title><rect x="672.0" y="307.0" width="2.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="675.0" y="318.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (59 samples, 12.63%)</title><rect x="674.5" y="371.0" width="149.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="677.5" y="382.0">one/nio/net/Session..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.21%)</title><rect x="674.5" y="355.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="677.5" y="366.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (58 samples, 12.42%)</title><rect x="677.1" y="355.0" width="146.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="680.1" y="366.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (57 samples, 12.21%)</title><rect x="679.6" y="339.0" width="144.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="682.6" y="350.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.write (57 samples, 12.21%)</title><rect x="679.6" y="323.0" width="144.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="682.6" y="334.0">one/nio/net/JavaSo..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (57 samples, 12.21%)</title><rect x="679.6" y="307.0" width="144.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="682.6" y="318.0">sun/nio/ch/SocketC..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (57 samples, 12.21%)</title><rect x="679.6" y="291.0" width="144.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="682.6" y="302.0">sun/nio/ch/IOUtil...</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (54 samples, 11.56%)</title><rect x="687.2" y="275.0" width="136.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="690.2" y="286.0">sun/nio/ch/IOUtil..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (53 samples, 11.35%)</title><rect x="687.2" y="259.0" width="133.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="690.2" y="270.0">sun/nio/ch/IOUtil..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.write (53 samples, 11.35%)</title><rect x="687.2" y="243.0" width="133.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="690.2" y="254.0">sun/nio/ch/Socket..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (49 samples, 10.49%)</title><rect x="697.3" y="227.0" width="123.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="700.3" y="238.0">sun/nio/ch/File..</text>
</g>
<g>
<title>write (48 samples, 10.28%)</title><rect x="699.8" y="211.0" width="121.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="702.8" y="222.0">write</text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.21%)</title><rect x="821.1" y="259.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="824.1" y="270.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.21%)</title><rect x="821.1" y="243.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="824.1" y="254.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.21%)</title><rect x="821.1" y="227.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="824.1" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (4 samples, 0.86%)</title><rect x="823.6" y="403.0" width="10.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="826.6" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.86%)</title><rect x="823.6" y="387.0" width="10.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="826.6" y="398.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.21%)</title><rect x="831.2" y="371.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="834.2" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.21%)</title><rect x="831.2" y="355.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="834.2" y="366.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.21%)</title><rect x="831.2" y="339.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="834.2" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kuzoliza/MyService.entity (79 samples, 16.92%)</title><rect x="833.7" y="403.0" width="199.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="836.7" y="414.0">ru/mail/polis/service/kuzo..</text>
</g>
<g>
<title>ru/mail/polis/service/kuzoliza/MyService.response (79 samples, 16.92%)</title><rect x="833.7" y="387.0" width="199.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="836.7" y="398.0">ru/mail/polis/service/kuzo..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.error (23 samples, 4.93%)</title><rect x="841.3" y="371.0" width="58.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="844.3" y="382.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_0_Or3Plus (23 samples, 4.93%)</title><rect x="841.3" y="355.0" width="58.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="844.3" y="366.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (23 samples, 4.93%)</title><rect x="841.3" y="339.0" width="58.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="844.3" y="350.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (23 samples, 4.93%)</title><rect x="841.3" y="323.0" width="58.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="844.3" y="334.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (23 samples, 4.93%)</title><rect x="841.3" y="307.0" width="58.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="844.3" y="318.0">ch/qos..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (22 samples, 4.71%)</title><rect x="843.8" y="291.0" width="55.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="846.8" y="302.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (22 samples, 4.71%)</title><rect x="843.8" y="275.0" width="55.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="846.8" y="286.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (21 samples, 4.50%)</title><rect x="843.8" y="259.0" width="53.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="846.8" y="270.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (21 samples, 4.50%)</title><rect x="843.8" y="243.0" width="53.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="846.8" y="254.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (17 samples, 3.64%)</title><rect x="843.8" y="227.0" width="43.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="846.8" y="238.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (6 samples, 1.28%)</title><rect x="843.8" y="211.0" width="15.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="846.8" y="222.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (6 samples, 1.28%)</title><rect x="843.8" y="195.0" width="15.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="846.8" y="206.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (6 samples, 1.28%)</title><rect x="843.8" y="179.0" width="15.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="846.8" y="190.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (6 samples, 1.28%)</title><rect x="843.8" y="163.0" width="15.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="846.8" y="174.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flushBuffer (6 samples, 1.28%)</title><rect x="843.8" y="147.0" width="15.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="846.8" y="158.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (4 samples, 0.86%)</title><rect x="848.9" y="131.0" width="10.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="851.9" y="142.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (4 samples, 0.86%)</title><rect x="848.9" y="115.0" width="10.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="851.9" y="126.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (4 samples, 0.86%)</title><rect x="848.9" y="99.0" width="10.1" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="851.9" y="110.0"></text>
</g>
<g>
<title>writeBytes (4 samples, 0.86%)</title><rect x="848.9" y="83.0" width="10.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="851.9" y="94.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.21%)</title><rect x="848.9" y="67.0" width="2.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="851.9" y="78.0"></text>
</g>
<g>
<title>jni_GetObjectField (1 samples, 0.21%)</title><rect x="851.4" y="67.0" width="2.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="854.4" y="78.0"></text>
</g>
<g>
<title>G1BarrierSet::AccessBarrier&lt;802934ull, G1BarrierSet&gt;::oop_load_in_heap_at(oopDesc*, long) (1 samples, 0.21%)</title><rect x="851.4" y="51.0" width="2.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="854.4" y="62.0"></text>
</g>
<g>
<title>AccessBarrierSupport::resolve_unknown_oop_ref_strength(unsigned long long, oopDesc*, long) (1 samples, 0.21%)</title><rect x="851.4" y="35.0" width="2.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="854.4" y="46.0"></text>
</g>
<g>
<title>write (2 samples, 0.43%)</title><rect x="853.9" y="67.0" width="5.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="856.9" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (11 samples, 2.36%)</title><rect x="859.0" y="211.0" width="27.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="862.0" y="222.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (11 samples, 2.36%)</title><rect x="859.0" y="195.0" width="27.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="862.0" y="206.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (11 samples, 2.36%)</title><rect x="859.0" y="179.0" width="27.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="862.0" y="190.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (11 samples, 2.36%)</title><rect x="859.0" y="163.0" width="27.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="862.0" y="174.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (11 samples, 2.36%)</title><rect x="859.0" y="147.0" width="27.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="862.0" y="158.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (11 samples, 2.36%)</title><rect x="859.0" y="131.0" width="27.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="862.0" y="142.0">j..</text>
</g>
<g>
<title>Unsafe_Park(JNIEnv_*, _jobject*, unsigned char, long) (10 samples, 2.14%)</title><rect x="861.5" y="115.0" width="25.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="864.5" y="126.0">U..</text>
</g>
<g>
<title>Parker::park(bool, long) (10 samples, 2.14%)</title><rect x="861.5" y="99.0" width="25.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="864.5" y="110.0">P..</text>
</g>
<g>
<title>__psynch_cvwait (10 samples, 2.14%)</title><rect x="861.5" y="83.0" width="25.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="864.5" y="94.0">_..</text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (4 samples, 0.86%)</title><rect x="886.8" y="227.0" width="10.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="889.8" y="238.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (4 samples, 0.86%)</title><rect x="886.8" y="211.0" width="10.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="889.8" y="222.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (4 samples, 0.86%)</title><rect x="886.8" y="195.0" width="10.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="889.8" y="206.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.21%)</title><rect x="889.3" y="179.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="892.3" y="190.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.43%)</title><rect x="891.8" y="179.0" width="5.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="894.8" y="190.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.43%)</title><rect x="891.8" y="163.0" width="5.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="894.8" y="174.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.21%)</title><rect x="891.8" y="147.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="894.8" y="158.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.21%)</title><rect x="891.8" y="131.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="894.8" y="142.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.21%)</title><rect x="891.8" y="115.0" width="2.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="894.8" y="126.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.21%)</title><rect x="894.4" y="147.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="897.4" y="158.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.21%)</title><rect x="894.4" y="131.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="897.4" y="142.0"></text>
</g>
<g>
<title>java/lang/Boolean.equals (1 samples, 0.21%)</title><rect x="896.9" y="259.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="899.9" y="270.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (2 samples, 0.43%)</title><rect x="899.4" y="371.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="902.4" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.43%)</title><rect x="899.4" y="355.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="902.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (50 samples, 10.71%)</title><rect x="904.5" y="371.0" width="126.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="907.5" y="382.0">ru/mail/polis/da..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (2 samples, 0.43%)</title><rect x="914.6" y="355.0" width="5.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="917.6" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (2 samples, 0.43%)</title><rect x="914.6" y="339.0" width="5.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="917.6" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (2 samples, 0.43%)</title><rect x="914.6" y="323.0" width="5.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="917.6" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (2 samples, 0.43%)</title><rect x="914.6" y="307.0" width="5.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="917.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (2 samples, 0.43%)</title><rect x="914.6" y="291.0" width="5.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="917.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.21%)</title><rect x="914.6" y="275.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="917.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (1 samples, 0.21%)</title><rect x="914.6" y="259.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="917.6" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (1 samples, 0.21%)</title><rect x="914.6" y="243.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="917.6" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (1 samples, 0.21%)</title><rect x="914.6" y="227.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="917.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kuzoliza/MemTable$$Lambda$64/731216725.apply (1 samples, 0.21%)</title><rect x="914.6" y="211.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="917.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kuzoliza/MemTable.lambda$iterator$0 (1 samples, 0.21%)</title><rect x="914.6" y="195.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="917.6" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (1 samples, 0.21%)</title><rect x="917.1" y="275.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="920.1" y="286.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.21%)</title><rect x="917.1" y="259.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="920.1" y="270.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.21%)</title><rect x="917.1" y="243.0" width="2.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="920.1" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (4 samples, 0.86%)</title><rect x="919.6" y="355.0" width="10.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="922.6" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (4 samples, 0.86%)</title><rect x="919.6" y="339.0" width="10.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="922.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kuzoliza/MemTable$$Lambda$64/731216725.apply (4 samples, 0.86%)</title><rect x="919.6" y="323.0" width="10.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="922.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kuzoliza/MemTable.lambda$iterator$0 (4 samples, 0.86%)</title><rect x="919.6" y="307.0" width="10.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="922.6" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (2 samples, 0.43%)</title><rect x="929.7" y="355.0" width="5.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="932.7" y="366.0"></text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (8 samples, 1.71%)</title><rect x="934.8" y="355.0" width="20.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="937.8" y="366.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (8 samples, 1.71%)</title><rect x="934.8" y="339.0" width="20.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="937.8" y="350.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (8 samples, 1.71%)</title><rect x="934.8" y="323.0" width="20.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="937.8" y="334.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (8 samples, 1.71%)</title><rect x="934.8" y="307.0" width="20.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="937.8" y="318.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (8 samples, 1.71%)</title><rect x="934.8" y="291.0" width="20.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="937.8" y="302.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (8 samples, 1.71%)</title><rect x="934.8" y="275.0" width="20.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="937.8" y="286.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (8 samples, 1.71%)</title><rect x="934.8" y="259.0" width="20.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="937.8" y="270.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (8 samples, 1.71%)</title><rect x="934.8" y="243.0" width="20.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="937.8" y="254.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (8 samples, 1.71%)</title><rect x="934.8" y="227.0" width="20.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="937.8" y="238.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (8 samples, 1.71%)</title><rect x="934.8" y="211.0" width="20.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="937.8" y="222.0"></text>
</g>
<g>
<title>BacktraceBuilder::BacktraceBuilder(Thread*) (3 samples, 0.64%)</title><rect x="937.3" y="195.0" width="7.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="940.3" y="206.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (3 samples, 0.64%)</title><rect x="937.3" y="179.0" width="7.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="940.3" y="190.0"></text>
</g>
<g>
<title>ObjArrayKlass::allocate(int, Thread*) (1 samples, 0.21%)</title><rect x="937.3" y="163.0" width="2.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="940.3" y="174.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.21%)</title><rect x="937.3" y="147.0" width="2.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="940.3" y="158.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.21%)</title><rect x="937.3" y="131.0" width="2.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="940.3" y="142.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.21%)</title><rect x="937.3" y="115.0" width="2.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="940.3" y="126.0"></text>
</g>
<g>
<title>_platform_bzero$VARIANT$Haswell (1 samples, 0.21%)</title><rect x="937.3" y="99.0" width="2.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="940.3" y="110.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.21%)</title><rect x="939.9" y="163.0" width="2.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="942.9" y="174.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.21%)</title><rect x="939.9" y="147.0" width="2.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="942.9" y="158.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.21%)</title><rect x="939.9" y="131.0" width="2.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="942.9" y="142.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.21%)</title><rect x="939.9" y="115.0" width="2.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="942.9" y="126.0"></text>
</g>
<g>
<title>_platform_bzero$VARIANT$Haswell (1 samples, 0.21%)</title><rect x="939.9" y="99.0" width="2.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="942.9" y="110.0"></text>
</g>
<g>
<title>arrayOopDesc::max_array_length(BasicType) (1 samples, 0.21%)</title><rect x="942.4" y="163.0" width="2.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="945.4" y="174.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (2 samples, 0.43%)</title><rect x="944.9" y="195.0" width="5.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="947.9" y="206.0"></text>
</g>
<g>
<title>Klass::java_mirror() const (1 samples, 0.21%)</title><rect x="947.4" y="179.0" width="2.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="950.4" y="190.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.21%)</title><rect x="950.0" y="195.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="953.0" y="206.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.21%)</title><rect x="950.0" y="179.0" width="2.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="953.0" y="190.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.21%)</title><rect x="950.0" y="163.0" width="2.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="953.0" y="174.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.21%)</title><rect x="950.0" y="147.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="953.0" y="158.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (1 samples, 0.21%)</title><rect x="950.0" y="131.0" width="2.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="953.0" y="142.0"></text>
</g>
<g>
<title>nmethod::metadata_addr_at(int) const (1 samples, 0.21%)</title><rect x="952.5" y="195.0" width="2.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="955.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (4 samples, 0.86%)</title><rect x="955.0" y="355.0" width="10.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="958.0" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.64%)</title><rect x="957.5" y="339.0" width="7.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="960.5" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.21%)</title><rect x="962.6" y="323.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="965.6" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.21%)</title><rect x="962.6" y="307.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="965.6" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.21%)</title><rect x="962.6" y="291.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="965.6" y="302.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.21%)</title><rect x="962.6" y="275.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="965.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kuzoliza/LSM.iterator (26 samples, 5.57%)</title><rect x="965.1" y="355.0" width="65.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="968.1" y="366.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/kuzoliza/LSM.noTombstones (26 samples, 5.57%)</title><rect x="965.1" y="339.0" width="65.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="968.1" y="350.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (2 samples, 0.43%)</title><rect x="965.1" y="323.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="968.1" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (2 samples, 0.43%)</title><rect x="965.1" y="307.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="968.1" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (1 samples, 0.21%)</title><rect x="967.6" y="291.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="970.6" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.hasNext (1 samples, 0.21%)</title><rect x="967.6" y="275.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="970.6" y="286.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (2 samples, 0.43%)</title><rect x="970.2" y="323.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="973.2" y="334.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (2 samples, 0.43%)</title><rect x="970.2" y="307.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="973.2" y="318.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (2 samples, 0.43%)</title><rect x="970.2" y="291.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="973.2" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (2 samples, 0.43%)</title><rect x="970.2" y="275.0" width="5.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="973.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (3 samples, 0.64%)</title><rect x="975.2" y="323.0" width="7.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="978.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (3 samples, 0.64%)</title><rect x="975.2" y="307.0" width="7.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="978.2" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.64%)</title><rect x="975.2" y="291.0" width="7.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="978.2" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (3 samples, 0.64%)</title><rect x="975.2" y="275.0" width="7.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="978.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (3 samples, 0.64%)</title><rect x="975.2" y="259.0" width="7.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="978.2" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (2 samples, 0.43%)</title><rect x="975.2" y="243.0" width="5.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="978.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kuzoliza/MemTable$$Lambda$64/731216725.apply (2 samples, 0.43%)</title><rect x="975.2" y="227.0" width="5.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="978.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kuzoliza/MemTable.lambda$iterator$0 (2 samples, 0.43%)</title><rect x="975.2" y="211.0" width="5.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="978.2" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.next (1 samples, 0.21%)</title><rect x="980.3" y="243.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="983.3" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.next (1 samples, 0.21%)</title><rect x="980.3" y="227.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="983.3" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.nextEntry (1 samples, 0.21%)</title><rect x="980.3" y="211.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="983.3" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.21%)</title><rect x="980.3" y="195.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="983.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kuzoliza/MemTable.iterator (19 samples, 4.07%)</title><rect x="982.8" y="323.0" width="48.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="985.8" y="334.0">ru/m..</text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (14 samples, 3.00%)</title><rect x="982.8" y="307.0" width="35.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="985.8" y="318.0">jav..</text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.absLowest (14 samples, 3.00%)</title><rect x="982.8" y="291.0" width="35.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="985.8" y="302.0">jav..</text>
</g>
<g>
<title>java/util/TreeMap.getCeilingEntry (14 samples, 3.00%)</title><rect x="982.8" y="275.0" width="35.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="985.8" y="286.0">jav..</text>
</g>
<g>
<title>java/util/TreeMap.compare (8 samples, 1.71%)</title><rect x="998.0" y="259.0" width="20.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1001.0" y="270.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.21%)</title><rect x="998.0" y="243.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1001.0" y="254.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.21%)</title><rect x="998.0" y="227.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1001.0" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.21%)</title><rect x="998.0" y="211.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1001.0" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 1.50%)</title><rect x="1000.5" y="243.0" width="17.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1003.5" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 1.50%)</title><rect x="1000.5" y="227.0" width="17.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1003.5" y="238.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 1.28%)</title><rect x="1003.0" y="211.0" width="15.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1006.0" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (5 samples, 1.07%)</title><rect x="1018.2" y="307.0" width="12.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1021.2" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (5 samples, 1.07%)</title><rect x="1018.2" y="291.0" width="12.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1021.2" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.&lt;init&gt; (5 samples, 1.07%)</title><rect x="1018.2" y="275.0" width="12.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1021.2" y="286.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.&lt;init&gt; (5 samples, 1.07%)</title><rect x="1018.2" y="259.0" width="12.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1021.2" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (5 samples, 1.07%)</title><rect x="1018.2" y="243.0" width="12.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1021.2" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.86%)</title><rect x="1020.7" y="227.0" width="10.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1023.7" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.86%)</title><rect x="1020.7" y="211.0" width="10.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1023.7" y="222.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.21%)</title><rect x="1028.3" y="195.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1031.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/kuzoliza/MyService.toByteArray (1 samples, 0.21%)</title><rect x="1030.8" y="371.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1033.8" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.21%)</title><rect x="1030.8" y="355.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1033.8" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.21%)</title><rect x="1030.8" y="339.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1033.8" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.21%)</title><rect x="1030.8" y="323.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1033.8" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.21%)</title><rect x="1030.8" y="307.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1033.8" y="318.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (4 samples, 0.86%)</title><rect x="1033.3" y="419.0" width="10.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1036.3" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.86%)</title><rect x="1033.3" y="403.0" width="10.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1036.3" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.86%)</title><rect x="1033.3" y="387.0" width="10.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1036.3" y="398.0"></text>
</g>
<g>
<title>java/lang/String.equals (4 samples, 0.86%)</title><rect x="1033.3" y="371.0" width="10.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1036.3" y="382.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (2 samples, 0.43%)</title><rect x="1038.4" y="355.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1041.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (1 samples, 0.21%)</title><rect x="1038.4" y="339.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1041.4" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.hasNext (1 samples, 0.21%)</title><rect x="1040.9" y="339.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1043.9" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.21%)</title><rect x="1043.4" y="419.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1046.4" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.21%)</title><rect x="1043.4" y="403.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1046.4" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.21%)</title><rect x="1043.4" y="387.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1046.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/kuzoliza/LSM$$Lambda$71/599601304.apply (1 samples, 0.21%)</title><rect x="1046.0" y="435.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1049.0" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (10 samples, 2.14%)</title><rect x="1048.5" y="451.0" width="25.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1051.5" y="462.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (9 samples, 1.93%)</title><rect x="1048.5" y="435.0" width="22.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1051.5" y="446.0">o..</text>
</g>
<g>
<title>java/lang/String.indexOf (9 samples, 1.93%)</title><rect x="1048.5" y="419.0" width="22.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1051.5" y="430.0">j..</text>
</g>
<g>
<title>java/lang/String.indexOf (9 samples, 1.93%)</title><rect x="1048.5" y="403.0" width="22.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1051.5" y="414.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (9 samples, 1.93%)</title><rect x="1048.5" y="387.0" width="22.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1051.5" y="398.0">j..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.21%)</title><rect x="1071.2" y="435.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1074.2" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.21%)</title><rect x="1071.2" y="419.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1074.2" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.21%)</title><rect x="1073.8" y="451.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1076.8" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (6 samples, 1.28%)</title><rect x="1076.3" y="451.0" width="15.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1079.3" y="462.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (5 samples, 1.07%)</title><rect x="1078.8" y="435.0" width="12.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1081.8" y="446.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (5 samples, 1.07%)</title><rect x="1078.8" y="419.0" width="12.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1081.8" y="430.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.21%)</title><rect x="1086.4" y="403.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1089.4" y="414.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.21%)</title><rect x="1086.4" y="387.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1089.4" y="398.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.21%)</title><rect x="1088.9" y="403.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1091.9" y="414.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.21%)</title><rect x="1091.5" y="451.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1094.5" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.21%)</title><rect x="1094.0" y="451.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1097.0" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.21%)</title><rect x="1094.0" y="435.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1097.0" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (31 samples, 6.64%)</title><rect x="1096.5" y="467.0" width="78.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1099.5" y="478.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/JavaSocket.read (31 samples, 6.64%)</title><rect x="1096.5" y="451.0" width="78.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1099.5" y="462.0">one/nio/n..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (31 samples, 6.64%)</title><rect x="1096.5" y="435.0" width="78.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1099.5" y="446.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (31 samples, 6.64%)</title><rect x="1096.5" y="419.0" width="78.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1099.5" y="430.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (30 samples, 6.42%)</title><rect x="1099.0" y="403.0" width="75.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1102.0" y="414.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (27 samples, 5.78%)</title><rect x="1099.0" y="387.0" width="68.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1102.0" y="398.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (27 samples, 5.78%)</title><rect x="1099.0" y="371.0" width="68.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1102.0" y="382.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (25 samples, 5.35%)</title><rect x="1104.1" y="355.0" width="63.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1107.1" y="366.0">sun/nio..</text>
</g>
<g>
<title>read (23 samples, 4.93%)</title><rect x="1109.1" y="339.0" width="58.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1112.1" y="350.0">read</text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.64%)</title><rect x="1167.3" y="387.0" width="7.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1170.3" y="398.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.64%)</title><rect x="1167.3" y="371.0" width="7.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1170.3" y="382.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (3 samples, 0.64%)</title><rect x="1167.3" y="355.0" width="7.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1170.3" y="366.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.21%)</title><rect x="1169.8" y="339.0" width="2.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1172.8" y="350.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (1 samples, 0.21%)</title><rect x="1172.3" y="339.0" width="2.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1175.3" y="350.0"></text>
</g>
<g>
<title>thread_start (6 samples, 1.28%)</title><rect x="1174.8" y="515.0" width="15.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1177.8" y="526.0"></text>
</g>
<g>
<title>_pthread_start (6 samples, 1.28%)</title><rect x="1174.8" y="499.0" width="15.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1177.8" y="510.0"></text>
</g>
<g>
<title>_pthread_body (6 samples, 1.28%)</title><rect x="1174.8" y="483.0" width="15.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1177.8" y="494.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (6 samples, 1.28%)</title><rect x="1174.8" y="467.0" width="15.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1177.8" y="478.0"></text>
</g>
<g>
<title>Thread::call_run() (6 samples, 1.28%)</title><rect x="1174.8" y="451.0" width="15.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1177.8" y="462.0"></text>
</g>
<g>
<title>ConcurrentGCThread::run() (1 samples, 0.21%)</title><rect x="1174.8" y="435.0" width="2.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1177.8" y="446.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (1 samples, 0.21%)</title><rect x="1174.8" y="419.0" width="2.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1177.8" y="430.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::sleep_before_next_cycle() (1 samples, 0.21%)</title><rect x="1174.8" y="403.0" width="2.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1177.8" y="414.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.21%)</title><rect x="1174.8" y="387.0" width="2.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1177.8" y="398.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.21%)</title><rect x="1174.8" y="371.0" width="2.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1177.8" y="382.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.21%)</title><rect x="1174.8" y="355.0" width="2.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1177.8" y="366.0"></text>
</g>
<g>
<title>__gettimeofday (1 samples, 0.21%)</title><rect x="1174.8" y="339.0" width="2.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1177.8" y="350.0"></text>
</g>
<g>
<title>JavaThread::run() (1 samples, 0.21%)</title><rect x="1177.4" y="435.0" width="2.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1180.4" y="446.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (1 samples, 0.21%)</title><rect x="1177.4" y="419.0" width="2.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1180.4" y="430.0"></text>
</g>
<g>
<title>attach_listener_thread_entry(JavaThread*, Thread*) (1 samples, 0.21%)</title><rect x="1177.4" y="403.0" width="2.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1180.4" y="414.0"></text>
</g>
<g>
<title>load_agent(AttachOperation*, outputStream*) (1 samples, 0.21%)</title><rect x="1177.4" y="387.0" width="2.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1180.4" y="398.0"></text>
</g>
<g>
<title>JvmtiExport::load_agent_library(char const*, char const*, char const*, outputStream*) (1 samples, 0.21%)</title><rect x="1177.4" y="371.0" width="2.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1180.4" y="382.0"></text>
</g>
<g>
<title>Agent_OnAttach (1 samples, 0.21%)</title><rect x="1177.4" y="355.0" width="2.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1180.4" y="366.0"></text>
</g>
<g>
<title>Profiler::run(Arguments&amp;) (1 samples, 0.21%)</title><rect x="1177.4" y="339.0" width="2.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1180.4" y="350.0"></text>
</g>
<g>
<title>Profiler::runInternal(Arguments&amp;, std::__1::basic_ostream&lt;char, std::__1::char_traits&lt;char&gt; &gt;&amp;) (1 samples, 0.21%)</title><rect x="1177.4" y="323.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1180.4" y="334.0"></text>
</g>
<g>
<title>std::__1::basic_ostream&lt;char, std::__1::char_traits&lt;char&gt; &gt;::flush() (1 samples, 0.21%)</title><rect x="1177.4" y="307.0" width="2.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1180.4" y="318.0"></text>
</g>
<g>
<title>std::__1::basic_filebuf&lt;char, std::__1::char_traits&lt;char&gt; &gt;::sync() (1 samples, 0.21%)</title><rect x="1177.4" y="291.0" width="2.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1180.4" y="302.0"></text>
</g>
<g>
<title>fflush (1 samples, 0.21%)</title><rect x="1177.4" y="275.0" width="2.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1180.4" y="286.0"></text>
</g>
<g>
<title>__sflush (1 samples, 0.21%)</title><rect x="1177.4" y="259.0" width="2.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1180.4" y="270.0"></text>
</g>
<g>
<title>write$NOCANCEL (1 samples, 0.21%)</title><rect x="1177.4" y="243.0" width="2.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1180.4" y="254.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.21%)</title><rect x="1179.9" y="435.0" width="2.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1182.9" y="446.0"></text>
</g>
<g>
<title>VMThread::loop() (1 samples, 0.21%)</title><rect x="1179.9" y="419.0" width="2.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1182.9" y="430.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (1 samples, 0.21%)</title><rect x="1179.9" y="403.0" width="2.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1182.9" y="414.0"></text>
</g>
<g>
<title>WatcherThread::run() (3 samples, 0.64%)</title><rect x="1182.4" y="435.0" width="7.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1185.4" y="446.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (2 samples, 0.43%)</title><rect x="1182.4" y="419.0" width="5.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1185.4" y="430.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (2 samples, 0.43%)</title><rect x="1182.4" y="403.0" width="5.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1185.4" y="414.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (2 samples, 0.43%)</title><rect x="1182.4" y="387.0" width="5.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1185.4" y="398.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (2 samples, 0.43%)</title><rect x="1182.4" y="371.0" width="5.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1185.4" y="382.0"></text>
</g>
<g>
<title>__psynch_cvwait (2 samples, 0.43%)</title><rect x="1182.4" y="355.0" width="5.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1185.4" y="366.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.21%)</title><rect x="1187.5" y="419.0" width="2.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.5" y="430.0"></text>
</g>
</g>
</svg>
